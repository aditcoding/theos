package com.theos.rest;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.ws.rs.client.Client;
import javax.ws.rs.client.ClientBuilder;
import javax.ws.rs.client.WebTarget;

import org.glassfish.jersey.media.sse.EventListener;
import org.glassfish.jersey.media.sse.EventSource;
import org.glassfish.jersey.media.sse.InboundEvent;
import org.glassfish.jersey.media.sse.SseFeature;

public class MyEventListener {

	private String baseUrl = "https://api.spark.io/";
	private String version = "v1";
	private String eventListeningUrl = baseUrl + version + "/devices/events";
	private String eventName = "";
	private String accessToken = "f1de157be1cdb4cc874046d239f37176e359885d";
	private final String ACCESS_TOKEN = "access_token";

	public static void main(String[] args) {
		MyEventListener myListener = new MyEventListener();
		myListener.startListening();
	}

	private void startListening() {
		Client client = ClientBuilder.newBuilder().register(SseFeature.class)
				.build();
		WebTarget target = client.target(eventListeningUrl);
		target.queryParam(ACCESS_TOKEN, accessToken);
		EventSource eventSource = EventSource.target(target).build();
		EventListener listener = new EventListener() {
			@Override
			public void onEvent(InboundEvent inboundEvent) {
				eventName = inboundEvent.getName();
				log(eventName + " ; " + inboundEvent.readData(String.class));
				processEvent(eventName);
			}
		};
		eventSource.register(listener);
		eventSource.open();
		eventSource.close();
	}
	
	private void processEvent(String eventName) {
		Map<String, String> queryParams = new HashMap<String, String>();
		String function = ""; // TODO
		String deviceId = ""; //TODO
		String urlStr = baseUrl + version + "/devices/" + deviceId + "/" + function;
		queryParams.put(ACCESS_TOKEN, accessToken);
		MyEventDispatcher.httpPost(urlStr, queryParams);
	}

	static void log(Object... obj) {
		for (Object o : obj) {
			System.out.println(o);
		}
	}
}
